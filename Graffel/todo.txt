* editor: 
  > replace all graphical positions with SkScalar
          > will eventually be replaced by Selection, which can be a pos or a range.
      - Font stuff: TextView?
        > splits in lines
        > fullHeight
  > auto-resize.
  > undo/redo
    > cmd stores
      - text inserted/removed
      - cursorPosition/selection (before and after?)
      - undo/redo buffers: see...bigScanner.
    >textgroups?
      >words (whitespace delimited)
      >inserts
* Doc: word offsets are part of doc and not of View.

* zoom: still a glitch when, I think, pressing the right mouse button.

Text Editor
----------------
struct TextLine : a paragraph, delimited by \n.
Shape, ShapeResult: get heigth of text paragraph, based on font and width
SkShaper: algorithm to create font rendering.
> How do paragraph styles? Or for now, no styles within a text block.

* try to compile all this stuff on linux...

Needed for iDea
----------------
* animations for transitions.

* Adorners?
* Styles for nodes? (set of preferences, like fixed size, set of colors,...)

iDea v2
------------
- Goal is combine Word with Whiteboard
- no OneNote !!!!! Too loose.
- more like Whiteboard, but with more functionality.
- also a bit like Word.
- is brainstorm tool: reopen in the same 'chaos' as it was closed.
-Nodes
  - all nodes have 3 levels: thumb, post-it and full
  > text
    - a title for thumb 
    - small note for post it
    - full text (or subcanvas for detailed view)
  > image
  > subCanvas

- Lists and hierarchies.
  > different auto-sorts
    > but can be broken
      > bit like windows desktop - layout of icons.
      > items can be selected and grouped.
  > group boundaries not necessarily constantly visible.
  > multiple lists of same items ("create duplicate group")
- view a group as a document (like Word)
  > continuous view
  > page view

- Layouts
  > for lists, linear, tiled, all in differnt directions.
  > for trees?
    > every subtree is a group and can thus be copied to diffent layouts.

SKIA documentation
--------------------
Image:. A read-only source of pixels.  May refer to encoded data.
Surface: A destination for drawing, either CPU or GPU.
Canvas: the abstract drawing interface.  Can point at a Surface, a Picture recorder, or Document.
Picture: a sequence of drawing commands; i.e. a command buffer
(Bitmap: before Surface and Image, was a source and a destination for drawing. Image/Source allows for more optimizationa.)