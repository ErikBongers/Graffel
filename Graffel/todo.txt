Phase 1
---------------
* create StickyNote visual
  > set fixed size.
  > add 3 editors.
* Create basic data model
  - Document OK
  - Nodes OK
     - Node: (text)
       - ID
       - txtTitle (keyword? title?)
       - txtDscr
       - txtBody
  - Default layout: canvas (infinite)
    - positions of each node.
* Save/read
* Create basic node visual (stycky note)
* Add/remove nodes to data model
* start with just a single infinite canvas, nodes get added at (0,0)

Phase 2
------------
* Implement a sortable list.
* Grid


Idea data model
------------------
Main doc:
 - List of nodes, with each an ID
 - Various hierarchies
   - Lists
   - Trees
   -...
 - Various layouts (especially for lists)
   - Linear list
   - Grid list
     - Different directions (horizontal, vertical,...)
 - Various canvasses
   - A fixed tree on the side
   - options:
     - zoomable
     - sticky
     - infinitecanvas


* zoom: still a glitch when, I think, pressing the right mouse button.

* try to compile all this stuff on linux...

Needed for iDea
----------------
* Adorners?
* Styles for nodes? (set of preferences, like fixed size, set of colors,...)

iDea v2
------------
- Goal is combine Word with Whiteboard
- more like Whiteboard, but with more functionality.
- also a bit like Word.
- is brainstorm tool: reopen in the same 'chaos' as it was closed.
- Nodes
  - all nodes have 3 levels: thumb, post-it and full
  > text
    - a title for thumb 
    - small note for post it
    - full text (or subcanvas for detailed view)
  > image
  > subCanvas

- Lists and hierarchies.
  > different auto-sorts
    > but can be broken
      > bit like windows desktop - layout of icons.
      > items can be selected and grouped.
  > group boundaries not necessarily constantly visible.
  > multiple lists of same items ("create duplicate group")
- view a group as a document (like Word)
  > continuous view
  > page view

- Layouts
  > for lists, linear, tiled, all in differnt directions.
  > for trees?
    > every subtree is a group and can thus be copied to diffent layouts.

SKIA documentation
--------------------
Image:. A read-only source of pixels.  May refer to encoded data.
Surface: A destination for drawing, either CPU or GPU.
Canvas: the abstract drawing interface.  Can point at a Surface, a Picture recorder, or Document.
Picture: a sequence of drawing commands; i.e. a command buffer
(Bitmap: before Surface and Image, was a source and a destination for drawing. Image/Source allows for more optimizationa.)